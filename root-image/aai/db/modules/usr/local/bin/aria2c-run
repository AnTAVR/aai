#!/bin/sh
#
#
#
#   Copyright (c) 2012-2014 Anthony Lyappiev <archlinux@antavr.ru>
#   http://archlinux.antavr.ru
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#~/.aria2/aria2.conf
#extra/libnotify
#community/aria2
#extra/ruby
#core/coreutils

PATH_DOWNLOAD="$(xdg-user-dir DOWNLOAD)/aria2c"
PATH_TORRENTS="${PATH_DOWNLOAD}/torrents"
NOTIFY_SEND='notify-send --urgency normal'
DAEMON= #(|true) при включенном демоне экономится память, но не очищается список законченных загрузок в PATH_TORRENTS

[[ -f /etc/aria2c/aria2c-run.conf ]] && source /etc/aria2c/aria2c-run.conf
[[ -f ~/aria2c/aria2c-run.conf ]] && source ~/aria2c/aria2c-run.conf

if [[ ! -f ~/.aria2/aria2.conf ]]
then
	mkdir -p ~/.aria2
	echo '#create aria2c-run
auto-save-interval=180
continue=true
seed-time=0
check-integrity=true
rpc-save-upload-metadata=false
http-accept-gzip=true
on-bt-download-complete=aria2c-onBtComplete
on-download-complete=aria2c-onComplete
on-download-pause=aria2c-onPause
on-download-error=aria2c-onError
on-download-start=aria2c-onStart
on-download-stop=aria2c-onStop
#create aria2c-run
' > ~/.aria2/aria2.conf
fi

SCRDIR="$(dirname ${0})"
SCRNAME="$(basename "${0}")"

URI="${1}"
shift

case "${SCRNAME}" in
	'aria2c-onComplete' | 'aria2c-onBtComplete' | 'aria2c-onError' | 'aria2c-onPause' | 'aria2c-onStart' | 'aria2c-onStop')
		F_N="${1}"
		F_PATH="${2}"

		${NOTIFY_SEND} "${SCRNAME}" "<b>GID=</b>${URI}<br />\n<b>N=</b>${F_N}<br />\n<b>PATH=</b>${F_PATH}"

		# если все загрузки выполнены то удаляем демона
		[[ ${SCRNAME} == 'aria2c-onComplete' ]] && [[ ${DAEMON} ]] && [[ ! -z "$(pidof aria2c)" ]] && [[ "$(ruby /usr/share/doc/aria2/xmlrpc/aria2mon | wc -l)" == "1" ]] && kill -s INT -- "$(pidof aria2c)"
		;;
	'aria2c-list' | 'aria2c-metalink' | 'aria2c-torrent' | 'aria2c-uri')
		LIST="${PATH_TORRENTS}/$(basename "${URI}")"

		mkdir -p "${PATH_DOWNLOAD}"
		mkdir -p "${PATH_TORRENTS}"

		[[ ${DAEMON} ]] && [[ -z "$(pidof aria2c)" ]] && aria2c -d "${PATH_DOWNLOAD}" -D --enable-rpc=true

		if [[ ${SCRNAME} == 'aria2c-uri' ]]
		then
			LIST+='.urls'
			echo "${URI}" > "${LIST}"
		else
			mv "${URI}" "${LIST}"
		fi

		case "${SCRNAME}" in
			'aria2c-torrent')
				if [[ ${DAEMON} ]]
				then
					ruby /usr/share/doc/aria2/xmlrpc/aria2rpc addTorrent "${LIST}" ${@}
				else
					aria2c -d "${PATH_DOWNLOAD}" -T "${LIST}" ${@}  && rm "${LIST}"
				fi
				;;
			'aria2c-metalink')
				if [[ ${DAEMON} ]]
				then
					ruby /usr/share/doc/aria2/xmlrpc/aria2rpc addMetalink "${LIST}" ${@}
				else
					aria2c -d "${PATH_DOWNLOAD}" -M "${LIST}" ${@}  && rm "${LIST}"
				fi
				;;
			'aria2c-list')
				if [[ ${DAEMON} ]]
				then
					while read URI
					do
						ruby /usr/share/doc/aria2/xmlrpc/aria2rpc addUri ${URI} ${@}
					done < "${LIST}"
				else
					aria2c -d "${PATH_DOWNLOAD}" -i "${LIST}" ${@} && rm "${LIST}"
				fi
				;;
			'aria2c-uri')
				if [[ ${DAEMON} ]]
				then
					ruby /usr/share/doc/aria2/xmlrpc/aria2rpc addUri "${URI}" ${@}
				else
					aria2c -d "${PATH_DOWNLOAD}" -i "${LIST}" ${@} && rm "${LIST}"
				fi
				;;
		esac
		;;
	*)
		echo "
cd ${SCRDIR}
ln -srf ${SCRNAME} aria2c-onBtComplete
ln -srf ${SCRNAME} aria2c-onComplete
ln -srf ${SCRNAME} aria2c-onError
ln -srf ${SCRNAME} aria2c-onPause
ln -srf ${SCRNAME} aria2c-onStart
ln -srf ${SCRNAME} aria2c-onStop
ln -srf ${SCRNAME} aria2c-list
ln -srf ${SCRNAME} aria2c-metalink
ln -srf ${SCRNAME} aria2c-torrent
ln -srf ${SCRNAME} aria2c-uri
"
		;;
esac
